{{ $architecture := or .architecture "arm64" }}
{{ $suite := or .suite "bookworm" }}
{{ $ospack := or .ospack (printf "ospack-debian-%s-%s" $architecture $suite) }}
{{ $imagesize := or .imagesize "2GB" }}
{{ $platform := or .platform "unknown" }}
{{ $cmdline := or .cmdline "rootwait" }}
{{ $image := or .image (printf "image-rockchip-%s" $platform) }}

architecture: {{ $architecture }}

actions:
  - action: unpack
    description: Unpack ospack
    file: {{ $ospack }}.tar.gz

  - action: image-partition
    imagename: {{ $image }}.img
    imagesize: {{ $imagesize }}
    partitiontype: gpt
    mountpoints:
      - mountpoint: /
        partition: root
    partitions:
      - name: loader1
        fs: none
        start: 64s
        end: 7168s
      - name: loader2
        fs: none
        start: 16384s
        end: 24575s
      - name: root
        fs: ext4
        start: 32768s  # 16M
        end: 100%
        flags: [ boot ]

  - action: filesystem-deploy
    setup-fstab: true
    setup-kernel-cmdline: true
    append-kernel-cmdline: {{ $cmdline }}

  - action: run
    description: Set hostname to debian-rockchip-{{ $platform }}
    command: echo "debian-rockchip-{{ $platform }}" > ${ROOTDIR}/etc/hostname

  - action: apt
    description: Install u-boot-menu
    packages:
      - u-boot-menu

  - action: apt
    description: Install initramfs-tools
    packages:
      - initramfs-tools

  - action: apt
    description: Install alsa-ucm-conf
    packages:
      - alsa-ucm-conf

  - action: apt
    description: Install alsa-utils
    packages:
      - alsa-utils

  #
  # Eventually this will be part of the upstream alsa-ucm-conf package
  # once the related alsa-project PR will be reviewed and merged:
  #
  #   https://github.com/alsa-project/alsa-ucm-conf/pull/316
  #
  - action: overlay
    description: Enable Rock 5B analog audio
    source: overlays/alsa-ucm

  - action: run
    command: mkdir -p ${ROOTDIR}/opt/linux

  - action: overlay
    description: Copy Linux kernel
    source: prebuilt/linux
    destination: /opt/linux

  - action: run
    description: List kernel
    command: find ${ROOTDIR}/opt/linux/

  - action: run
    description: Install kernel
    chroot: true
    command: apt-get install ./opt/linux/*.deb

  - action: run
    description: Check extlinux contents
    command: cat ${ROOTDIR}/boot/extlinux/extlinux.conf

  - action: raw
    description: Flash idblock.bin to loader1
    origin: recipe
    source: prebuilt/u-boot-{{ $platform }}/idblock.bin
    partition: loader1
    offset: 0

  - action: raw
    description: Flash uboot.img to loader2
    origin: recipe
    source: prebuilt/u-boot-{{ $platform }}/uboot.img
    partition: loader2
    offset: 0

  - action: run
    description: Copy USB loader binary to output directory
    chroot: false
    postprocess: true
    command: cp $RECIPEDIR/prebuilt/u-boot-{{ $platform }}/rk3588_spl_loader_*.bin $ARTIFACTDIR/

  - action: run
    description: Create block map for {{ $image }}.img
    chroot: false
    postprocess: true
    command: bmaptool create $ARTIFACTDIR/{{ $image }}.img > $ARTIFACTDIR/{{ $image }}.bmap

  - action: run
    description: Compress {{ $image }}.img
    postprocess: true
    command: pigz -f $ARTIFACTDIR/{{ $image }}.img
